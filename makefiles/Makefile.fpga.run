# Creates and runs FPGA build

include $(CONFIG)
include $(FPGA_COMMON)/makefiles/Makefile.core
include $(FPGA_COMMON)/makefiles/Makefile.common

# Pull in any project VHDL definitions
-include $(CALLER_TOP)/FPGA_DEFS

# Pick up board specific definitions
include $(BOARD_DIR)/CONFIG


# ------------------------------------------------------------------------------

PROJECT_TOP = $(CALLER_TOP)

TCL_DIR = $(FPGA_COMMON)/tcl

# Both of these directories are going to be target specific
BD_DIR = $(PROJECT_TOP)/bd$(_TARGET)

CONSTR_FILES += built_dir/top_pins.xdc
CONSTR_FILES += $(wildcard $(CONSTR_DIR)/*.xdc)


VHD_DIRS += $(VHD_DIR)
VHD_DIRS += $(FPGA_COMMON)/vhd

BUILT += top_entity.vhd
BUILT += make_version.tcl


SOURCES := $(shell find $(VHD_DIRS) -name \*.vhd)


# ------------------------------------------------------------------------------

$(call MUST_DEFINE,VIVADO)

# Command to run vivado
RUN_VIVADO = $(VIVADO) $(VIVADO_EXTRA_ARGS)


# ------------------------------------------------------------------------------

default: fpga
.PHONY: default

fpga: $(PROJECT_NAME).bit
.PHONY: fpga

# Don't leave incomplete builds behind
.DELETE_ON_ERROR:


# Common rules for built targets
include $(FPGA_COMMON)/makefiles/Makefile.built



# ------------------------------------------------------------------------------
# Core build process:
#   interconnect.tcl -> interconnect.bd -> interconnect.vhd
#   + *.vhd -> $(PROJECT_NAME).bit

# The interconnect block design needs the metadata array
interconnect/BD_DONE: built_dir/metadata.coe


# Load block designs from TCL sources
%/BD_DONE: $(BD_DIR)/%.tcl
	echo $$LM_LICENSE_FILE
	$(RUN_VIVADO) -mode batch -source $(TCL_DIR)/create_bd.tcl \
            -tclargs $* -tclargs $< -tclargs $(FPGA_PART)
	touch $@


# Arguments passed through to initial build of project
BUILD_TOP_ARGS += FPGA_COMMON
BUILD_TOP_ARGS += PROJECT_TOP
BUILD_TOP_ARGS += PROJECT_NAME
BUILD_TOP_ARGS += FPGA_PART
BUILD_TOP_ARGS += BLOCK_DESIGNS
BUILD_TOP_ARGS += VHD_DIRS
BUILD_TOP_ARGS += CONSTR_FILES

BITFILE_DEPENDS += $(BUILT:%=built_dir/%)
BITFILE_DEPENDS += $(BLOCK_DESIGNS:%=%/BD_DONE)
BITFILE_DEPENDS += $(SOURCES)

# Build final target
$(PROJECT_NAME).bit: $(BITFILE_DEPENDS)
	rm -rf $(PROJECT_NAME)
	ln -sf ./$(PROJECT_NAME)/$(PROJECT_NAME).runs/impl_1/top.bit $@
	mkdir -p reports checkpoints
	$(call EXPORT,$(BUILD_TOP_ARGS)) $(RUN_VIVADO) \
            -mode batch -source $(TCL_DIR)/build_top.tcl


# ------------------------------------------------------------------------------

create-bd: $(BLOCK_DESIGNS:%=%/BD_DONE)
.PHONY: create-bd

# Run vivado on project
runvivado:
	TMP=$(CURDIR) $(RUN_VIVADO) \
            -mode batch -source $(TCL_DIR)/run_vivado.tcl \
            -tclargs '$(BD_DIR)' \
            -tclargs '$(PROJECT_NAME)/$(PROJECT_NAME).xpr'
.PHONY: runvivado
# Note the rather odd TMP= workaround: this needs to be set when running the
# Vivado hardware manager, as otherwise the application cs_server fails to run.
# It appears to need somewhere where it can dump executable temporary files!


# Allow any extra rules that need to come late to be included here
-include $(PROJECT_TOP)/FPGA_RULES

# vim: set filetype=make:
